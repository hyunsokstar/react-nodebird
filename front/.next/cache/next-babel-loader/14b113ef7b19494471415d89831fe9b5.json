{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _initialState;\n\nimport shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport var initialState = (_initialState = {\n  mainPosts: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  hasMorePosts: true,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  imagePaths: [],\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null\n}, _defineProperty(_initialState, \"likePostLoading\", false), _defineProperty(_initialState, \"likePostDone\", false), _defineProperty(_initialState, \"likePostError\", null), _defineProperty(_initialState, \"unlikePostLoading\", false), _defineProperty(_initialState, \"unlikePostDone\", false), _defineProperty(_initialState, \"unlikePostError\", null), _initialState);\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Commeents: [{\n        User: {\n          id: shortId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n}; // initialState.mainPosts = initialState.mainPosts.concat(\n//     generateDummyPost(10)\n// )\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE'; ////\n\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    Images: [],\n    Comments: []\n  };\n}; ////\n\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true; // draft.mainPosts = action.data.concat(draft.mainPosts);\n\n        draft.mainPosts = draft.mainPosts.concat(action.data); // draft.hasMorePosts = draft.mainPosts.length < 50;\n\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          console.log(\"action.data.PostId(success) : \", action.data.PostId);\n          console.log(\"action.data.PostId(success) : \", action.data.UserId);\n\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers.push({\n            id: action.data.UserId\n          });\n\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Likers = _post2.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      default:\n        return state;\n    } // 스위치문 괄호 끝\n\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/react-nodebird/front/reducers/post.js"],"names":["shortId","produce","faker","initialState","mainPosts","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","loadPostsLoading","loadPostsDone","loadPostsError","hasMorePosts","uploadImagesLoading","uploadImagesDone","uploadImagesError","imagePaths","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Commeents","sentence","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","dummyPost","data","Comments","dummyComment","reducer","state","action","draft","type","unshift","error","post","find","v","PostId","filter","concat","length","console","log","UserId","Likers","push"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';   \r\nimport faker from 'faker';\r\n\r\nexport const initialState = {\r\n    mainPosts: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    hasMorePosts: true,\r\n\r\n    uploadImagesLoading: false,\r\n    uploadImagesDone: false,\r\n    uploadImagesError: null,\r\n    imagePaths: [],\r\n\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n\r\n\r\n};\r\n\r\nexport const generateDummyPost = (number) => Array(number).fill().map(()=> ({\r\n    id:shortId.generate(),\r\n    User: {\r\n        id:shortId.generate(),\r\n        nickname:faker.name.findName(),\r\n    },\r\n    content: faker.lorem.paragraph(),\r\n    Images: [{\r\n        src: faker.image.image(),\r\n    }],\r\n    Commeents: [{\r\n        User: {\r\n            id: shortId.generate(),\r\n            nickname: faker.name.findName(),\r\n        },\r\n        content: faker.lorem.sentence(),\r\n    }],\r\n}));\r\n\r\n// initialState.mainPosts = initialState.mainPosts.concat(\r\n//     generateDummyPost(10)\r\n// )\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\n////\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nconst dummyPost = (data) => ({\r\n    id: data.id,\r\n    content: data.content,\r\n    User: {\r\n        id: 1,\r\n        nickname: '제로초',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n});\r\n\r\n////\r\nconst dummyComment = (data) => ({\r\n    id: shortId.generate(),\r\n    content: data,\r\n    User: {\r\n        id: 1,\r\n        nickname: \"제로초\",\r\n    },\r\n});\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = true;\r\n                draft.mainPosts.unshift(action.data)\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading = false;\r\n                draft.addPostError = action.error;\r\n                break;\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading = true;\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Comments.unshift(action.data);\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = true;\r\n                break;                \r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentError = action.error;\r\n                break;\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading = true;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.removePostLoading = false;\r\n                draft.removePostDone = true;\r\n                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading = false;\r\n                draft.removePostError = action.error;\r\n                break;      \r\n                \r\n            case LOAD_POSTS_REQUEST:\r\n                draft.loadPostsLoading = true;\r\n                draft.loadPostsDone = false;\r\n                draft.loadPostsError = null;\r\n                break;\r\n            case LOAD_POSTS_SUCCESS:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsDone = true;\r\n                // draft.mainPosts = action.data.concat(draft.mainPosts);\r\n                draft.mainPosts = draft.mainPosts.concat(action.data);\r\n                // draft.hasMorePosts = draft.mainPosts.length < 50;\r\n                draft.hasMorePosts = action.data.length === 10;\r\n                break;\r\n            case LOAD_POSTS_FAILURE:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsError = action.error;\r\n                break;\r\n            case UPLOAD_IMAGES_REQUEST:\r\n                draft.uploadImagesLoading = true;\r\n                draft.uploadImagesDone = false;\r\n                draft.uploadImagesError = null;\r\n                break;\r\n            case UPLOAD_IMAGES_SUCCESS: {\r\n                draft.imagePaths = action.data;\r\n                draft.uploadImagesLoading = false;\r\n                draft.uploadImagesDone = true;\r\n                break;\r\n            }\r\n            case UPLOAD_IMAGES_FAILURE:\r\n                draft.uploadImagesLoading = false;\r\n                draft.uploadImagesError = action.error;\r\n                break;\r\n\r\n            case LIKE_POST_REQUEST:\r\n                draft.likePostLoading = true;\r\n                draft.likePostDone = false;\r\n                draft.likePostError = null;\r\n                break;\r\n            case LIKE_POST_SUCCESS: {\r\n                console.log(\"action.data.PostId(success) : \", action.data.PostId);\r\n                console.log(\"action.data.PostId(success) : \", action.data.UserId);\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Likers.push({ id: action.data.UserId });\r\n                draft.likePostLoading = false;\r\n                draft.likePostDone = true;\r\n                break;\r\n            }\r\n            case LIKE_POST_FAILURE:\r\n                draft.likePostLoading = false;\r\n                draft.likePostError = action.error;\r\n                break;\r\n            case UNLIKE_POST_REQUEST:\r\n                draft.unlikePostLoading = true;\r\n                draft.unlikePostDone = false;\r\n                draft.unlikePostError = null;\r\n                break;\r\n            case UNLIKE_POST_SUCCESS: {\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n                draft.unlikePostLoading = false;\r\n                draft.unlikePostDone = true;\r\n                break;\r\n            }\r\n            case UNLIKE_POST_FAILURE:\r\n                draft.unlikePostLoading = false;\r\n                draft.unlikePostError = action.error;\r\n                break;\r\n\r\n            default:\r\n                return state;\r\n        } // 스위치문 괄호 끝\r\n    });\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}