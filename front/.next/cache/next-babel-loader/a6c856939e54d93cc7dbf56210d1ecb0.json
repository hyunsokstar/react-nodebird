{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '펭하'\n    },\n    content: 'sample 게시글 for Test',\n    Images: [{\n      src: 'https://image.shutterstock.com/image-vector/sample-red-square-grunge-stamp-260nw-338250266.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }]\n};\nexport const ADD_POST = 'ADD_POST'; // export const addPost = {\n//     type: ADD_POST,\n// };\n\nconst dummyPost = data => {\n  console.log(\"data : \", data);\n  return {\n    id: 4,\n    content: data.text,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [dummyPost(action.data), ...state.mainPosts],\n          postAdded: true\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","ADD_POST","dummyPost","data","console","log","text","reducer","state","action","type","postAdded"],"mappings":";;;;;;AACA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AACFD,MAAAA,EAAE,EAAE,CADF;AAEFE,MAAAA,QAAQ,EAAE;AAFR,KAFV;AAMIC,IAAAA,OAAO,EAAE,qBANb;AAOIC,IAAAA,MAAM,EAAE,CAAC;AACLC,MAAAA,GAAG,EAAE;AADA,KAAD,EAEL;AACCA,MAAAA,GAAG,EAAE;AADN,KAFK,EAIL;AACCA,MAAAA,GAAG,EAAE;AADN,KAJK,CAPZ;AAeIC,IAAAA,QAAQ,EAAE,CAAC;AACPL,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAE;AADR,OADC;AAIPC,MAAAA,OAAO,EAAE;AAJF,KAAD,EAKP;AACCF,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAE;AADR,OADP;AAICC,MAAAA,OAAO,EAAE;AAJV,KALO;AAfd,GADO;AADa,CAArB;AAiCP,OAAO,MAAMI,QAAQ,GAAG,UAAjB,C,CAEP;AACA;AACA;;AAEA,MAAMC,SAAS,GAAIC,IAAD,IAAU;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACA,SACI;AACIT,IAAAA,EAAE,EAAE,CADR;AAEIG,IAAAA,OAAO,EAAEM,IAAI,CAACG,IAFlB;AAGIX,IAAAA,IAAI,EAAE;AACFD,MAAAA,EAAE,EAAE,CADF;AAEFE,MAAAA,QAAQ,EAAE;AAFR,KAHV;AAOIE,IAAAA,MAAM,EAAE,EAPZ;AAQIE,IAAAA,QAAQ,EAAE;AARd,GADJ;AAYH,CAdD;;AAgBA,MAAMO,OAAO,GAAG,CAACC,KAAK,GAAGhB,YAAT,EAAuBiB,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKT,QAAL;AAAe;AACX,+CACOO,KADP;AAEIf,UAAAA,SAAS,EAAE,CAACS,SAAS,CAACO,MAAM,CAACN,IAAR,CAAV,EAAyB,GAAGK,KAAK,CAACf,SAAlC,CAFf;AAGIkB,UAAAA,SAAS,EAAE;AAHf;AAKH;;AAED;AACI,aAAOH,KAAP;AAXR;AAaH,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["\r\nexport const initialState = {\r\n    mainPosts: [\r\n        {\r\n            id: 1,\r\n            User: {\r\n                id: 1,\r\n                nickname: '펭하',\r\n            },\r\n            content: 'sample 게시글 for Test',\r\n            Images: [{\r\n                src: 'https://image.shutterstock.com/image-vector/sample-red-square-grunge-stamp-260nw-338250266.jpg',\r\n            }, {\r\n                src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n            }, {\r\n                src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n            }],\r\n\r\n            Comments: [{\r\n                User: {\r\n                    nickname: 'nero',\r\n                },\r\n                content: '우와 개정판이 나왔군요~',\r\n            }, {\r\n                User: {\r\n                    nickname: 'hero',\r\n                },\r\n                content: '얼른 사고싶어요~',\r\n            }]\r\n\r\n        }\r\n    ],\r\n};\r\n\r\nexport const ADD_POST = 'ADD_POST';\r\n\r\n// export const addPost = {\r\n//     type: ADD_POST,\r\n// };\r\n\r\nconst dummyPost = (data) => {\r\n    console.log(\"data : \", data);\r\n    return (\r\n        {\r\n            id: 4,\r\n            content: data.text,\r\n            User: {\r\n                id: 1,\r\n                nickname: '제로초',\r\n            },\r\n            Images: [],\r\n            Comments: [],\r\n        }\r\n    )\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n                postAdded: true,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}