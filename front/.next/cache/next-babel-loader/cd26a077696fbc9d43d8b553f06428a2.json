{"ast":null,"code":"var _jsxFileName = \"C:\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux'; // const CommentForm = () => {\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {\n    console.log(\"commentText(댓글)\", commentText); // dispatch({\n    //     type: ADD_COMMENT_REQUEST,\n    //     data: { content: commentText, userId: id, postId: post.id },\n    // });\n  }, [commentText, id]);\n  return (// <Form onFinish=\"\">\n    __jsx(Form, {\n      onFinish: onSubmitComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Item, {\n      style: {\n        position: 'relative',\n        marginTop: \"2px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(Input.TextArea, {\n      rows: 4,\n      value: commentText,\n      onChange: onChangeCommentText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), __jsx(Button, {\n      style: {\n        position: 'absolute',\n        right: 0,\n        bottom: -40\n      },\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"\\uC090\\uC57D\")))\n  );\n};\n\nCommentForm.propTypes = {};\nexport default CommentForm;","map":{"version":3,"sources":["C:/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","Button","Form","Input","useInput","useDispatch","useSelector","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","position","marginTop","right","bottom","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAIA;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,EAAE,GAAGH,WAAW,CAAEI,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM,CAACI,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDX,QAAQ,CAAC,EAAD,CAAnE;AAGA,QAAMY,eAAe,GAAGjB,WAAW,CAAC,MAAM;AAEtCkB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAAgCL,WAAhC,EAFsC,CAGtC;AACA;AACA;AACA;AACH,GAPkC,EAOhC,CAACA,WAAD,EAAcJ,EAAd,CAPgC,CAAnC;AASA,SACI;AACA,UAAC,IAAD;AAAM,MAAA,QAAQ,EAAEO,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,SAAS,EAAE;AAAnC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,IAAI,EAAE,CAAtB;AAAyB,MAAA,KAAK,EAAEP,WAAhC;AAA6C,MAAA,QAAQ,EAAEC,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,MAAC,MAAD;AACI,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE,UAAZ;AAAwBE,QAAAA,KAAK,EAAE,CAA/B;AAAkCC,QAAAA,MAAM,EAAE,CAAC;AAA3C,OADX;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,QAAQ,EAAC,QAHb;AAII,MAAA,OAAO,EAAC,EAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CADJ;AAFJ;AAiBH,CA/BD;;AAiCAf,WAAW,CAACgB,SAAZ,GAAwB,EAAxB;AAGA,eAAehB,WAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n\r\n// const CommentForm = () => {\r\nconst CommentForm = ({ post }) => {\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n\r\n        console.log(\"commentText(댓글)\" , commentText);\r\n        // dispatch({\r\n        //     type: ADD_COMMENT_REQUEST,\r\n        //     data: { content: commentText, userId: id, postId: post.id },\r\n        // });\r\n    }, [commentText, id]);\r\n\r\n    return (\r\n        // <Form onFinish=\"\">\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{ position: 'relative', marginTop: \"2px\" }}>\r\n                {/* <Input.TextArea rows={4} value=\"\" onChange=\"\" /> */}\r\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n                <Button\r\n                    style={{ position: 'absolute', right: 0, bottom: -40 }}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    loading=\"\"\r\n                >\r\n                    삐약\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n};\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}