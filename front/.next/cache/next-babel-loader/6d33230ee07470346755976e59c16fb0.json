{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-nodebird\\\\front\\\\components\\\\UserProfile.js\";\nvar __jsx = React.createElement;\nimport { Avatar, Card, Button } from \"antd\";\nimport React, { useCallback } from \"react\"; // import { logoutAction } from \"../reducers/user\";\n\nimport { LOG_OUT_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from \"react-redux\";\nconst me = {\n  nickname: \"제로초\",\n  Post: [],\n  Followings: [],\n  Followers: [],\n  isLoggedIn: false\n};\n\nconst UserProfile = ({\n  setIsLoggedIn\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    logOutLoading\n  } = useSelector(state => state.user);\n  const onLogOut = useCallback(() => {\n    // setIsLoggedIn(false);\n    // dispatch(logoutAction());\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n  }, []);\n  return __jsx(Card, {\n    actions: [// <div key=\"twit\">짹짹<br />{me.Posts.length}</div>,\n      // <div key=\"following\">팔로잉<br />{me.Followings.length}</div>,\n      // <div key=\"follower\">팔로워<br />{me.Followers.length}</div>,\n    ],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, me.nickname[0]),\n    title: me.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    onClick: onLogOut,\n    loading: logOutLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"));\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["C:/react-nodebird/front/components/UserProfile.js"],"names":["Avatar","Card","Button","React","useCallback","LOG_OUT_REQUEST","useDispatch","useSelector","me","nickname","Post","Followings","Followers","isLoggedIn","UserProfile","setIsLoggedIn","dispatch","logOutLoading","state","user","onLogOut","type"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,MAArC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC,C,CACA;;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,MAAMC,EAAE,GAAG;AACPC,EAAAA,QAAQ,EAAE,KADH;AAEPC,EAAAA,IAAI,EAAE,EAFC;AAGPC,EAAAA,UAAU,EAAE,EAHL;AAIPC,EAAAA,SAAS,EAAE,EAJJ;AAKPC,EAAAA,UAAU,EAAE;AALL,CAAX;;AAQA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACvC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEE,IAAAA,EAAF;AAAMS,IAAAA;AAAN,MAAwBV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzC;AAGA,QAAMC,QAAQ,GAAGhB,WAAW,CAAC,MAAM;AAC/B;AACA;AACAY,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEhB;AADD,KAAD,CAAR;AAGH,GAN2B,EAMzB,EANyB,CAA5B;AAQA,SACI,MAAC,IAAD;AACI,IAAA,OAAO,EAAE,CACL;AACA;AACA;AAHK,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASG,EAAE,CAACC,QAAH,CAAY,CAAZ,CAAT,CADZ;AAEI,IAAA,KAAK,EAAED,EAAE,CAACC,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAYI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEW,QAAjB;AAA2B,IAAA,OAAO,EAAEH,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAZJ,CADJ;AAiBH,CA9BD;;AAgCA,eAAeH,WAAf","sourcesContent":["import { Avatar, Card, Button } from \"antd\";\r\nimport React, { useCallback } from \"react\";\r\n// import { logoutAction } from \"../reducers/user\";\r\nimport { LOG_OUT_REQUEST } from '../reducers/user';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\nconst me = {\r\n    nickname: \"제로초\",\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    isLoggedIn: false,\r\n};\r\n\r\nconst UserProfile = ({ setIsLoggedIn }) => {\r\n    const dispatch = useDispatch();\r\n    const { me, logOutLoading } = useSelector((state) => state.user);\r\n    \r\n\r\n    const onLogOut = useCallback(() => {\r\n        // setIsLoggedIn(false);\r\n        // dispatch(logoutAction());\r\n        dispatch({\r\n            type: LOG_OUT_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Card\r\n            actions={[\r\n                // <div key=\"twit\">짹짹<br />{me.Posts.length}</div>,\r\n                // <div key=\"following\">팔로잉<br />{me.Followings.length}</div>,\r\n                // <div key=\"follower\">팔로워<br />{me.Followers.length}</div>,\r\n            ]}\r\n        >\r\n            <Card.Meta\r\n                avatar={<Avatar>{me.nickname[0]}</Avatar>}\r\n                title={me.nickname}\r\n            />\r\n            {/* <Button onClick={onLogOut}>로그아웃</Button> */}\r\n            <Button onClick={onLogOut} loading={logOutLoading}>로그아웃</Button>\r\n        </Card>\r\n\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}