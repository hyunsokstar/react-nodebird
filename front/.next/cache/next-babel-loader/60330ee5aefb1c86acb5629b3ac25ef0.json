{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from 'react-redux'; // import { addPost } from '../reducers/post';\n// import { ADD_POST } from '../reducers/post';\n\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addPostLoading = _useSelector.addPostLoading,\n      addPostDone = _useSelector.addPostDone;\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onChangeText = useCallback(function (e) {\n    // console.log(\"text : \" + e.target.value);\n    setText(e.target.value);\n  }, [text]);\n  var onSubmitForm = useCallback(function () {\n    console.log(\"게시글 추가 submit click !!\");\n    console.log(\"text 확인 : \", text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text\n      }\n    });\n  }, [text]);\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    loading: addPostLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")));\n};\n\n_s(PostForm, \"AYhgFPD6PJB37DPkNa+gqJ2jRjc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/prepare/front/components/PostForm.js"],"names":["React","useState","useCallback","useEffect","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","post","addPostLoading","addPostDone","onChangeText","e","target","value","onSubmitForm","console","log","type","data","content","margin"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;AACA;;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACnB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AADmB,kBAEKP,QAAQ,CAAC,EAAD,CAFb;AAAA,MAEZW,IAFY;AAAA,MAENC,OAFM;;AAAA,qBAGqBN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHhC;AAAA,MAGXC,cAHW,gBAGXA,cAHW;AAAA,MAGKC,WAHL,gBAGKA,WAHL;;AAKnBd,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIc,WAAJ,EAAiB;AACbJ,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAJQ,EAIN,CAACI,WAAD,CAJM,CAAT;AAMA,MAAMC,YAAY,GAAGhB,WAAW,CAAC,UAACiB,CAAD,EAAO;AACpC;AACAN,IAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAH+B,EAG7B,CAACT,IAAD,CAH6B,CAAhC;AAKA,MAAMU,YAAY,GAAGpB,WAAW,CAAC,YAAM;AACnCqB,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BZ,IAA1B;AACAD,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAEhB,gBADD;AAELiB,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAACf;AADN;AAFD,KAAD,CAAR;AAOH,GAV+B,EAU7B,CAACA,IAAD,CAV6B,CAAhC;AAYA,SACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAEgB,MAAAA,MAAM,EAAE;AAAV,KADX;AAEI,IAAA,OAAO,EAAC,qBAFZ;AAGI,IAAA,QAAQ,EAAEN,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,KAAD,CAAO,QAAP;AACI,IAAA,KAAK,EAAEV,IADX;AAEI,IAAA,QAAQ,EAAEM,YAFd;AAGI,IAAA,SAAS,EAAE,GAHf;AAII,IAAA,WAAW,EAAC,wEAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,MAAM,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,EAUI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE;AAAE,eAAO;AAAT,KAA9B;AAAkD,IAAA,QAAQ,EAAC,QAA3D;AAAoE,IAAA,OAAO,EAAEF,cAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,CAXJ,CADJ;AA0BH,CAtDD;;GAAMN,Q;UACeF,W,EAEuBD,W;;;KAHtCG,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// import { addPost } from '../reducers/post';\r\n// import { ADD_POST } from '../reducers/post';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [text, setText] = useState('');\r\n    const { addPostLoading, addPostDone } = useSelector((state) => state.post);\r\n\r\n    useEffect(() => {\r\n        if (addPostDone) {\r\n            setText('');\r\n        }\r\n    }, [addPostDone]);\r\n\r\n    const onChangeText = useCallback((e) => {\r\n        // console.log(\"text : \" + e.target.value);\r\n        setText(e.target.value);\r\n    }, [text]);\r\n\r\n    const onSubmitForm = useCallback(() => {\r\n        console.log(\"게시글 추가 submit click !!\");\r\n        console.log(\"text 확인 : \", text);\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                content:text,\r\n            },\r\n        });\r\n    \r\n    }, [text]);\r\n\r\n    return (\r\n        <Form\r\n            style={{ margin: \"10px 0 20px\" }}\r\n            encType=\"multipart/form-data\"\r\n            onFinish={onSubmitForm}\r\n        >\r\n            <Input.TextArea\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder=\"어떤 신기한 일이 있었나요?\"\r\n            />\r\n            <div>\r\n                <input type=\"file\" multiple hidden />\r\n                <Button>이미지 업로드</Button>\r\n                {/* <Button\r\n                    type=\"primary\"\r\n                    style={{ float: \"right\" }}\r\n                    htmlType=\"submit\"\r\n                >\r\n                    짹짹\r\n                </Button> */}\r\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={addPostLoading}>짹짹</Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}