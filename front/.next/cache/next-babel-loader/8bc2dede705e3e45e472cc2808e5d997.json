{"ast":null,"code":"var _jsxFileName = \"C:\\\\prepare\\\\front\\\\components\\\\UserProfile.js\";\nvar __jsx = React.createElement;\nimport { Avatar, Card, Button } from \"antd\";\nimport React, { useCallback } from \"react\"; // import { logoutAction } from \"../reducers/user\";\n\nimport { LOG_OUT_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from \"react-redux\"; // const dummy = {\n//     nickname: \"제로초\",\n//     Post: [],\n//     Followings: [],\n//     Followers: [],\n//     isLoggedIn: false,\n// };\n\nconst UserProfile = ({\n  setIsLoggedIn\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    logOutLoading\n  } = useSelector(state => state.user);\n  const onLogOut = useCallback(() => {\n    // setIsLoggedIn(false);\n    // dispatch(logoutAction());\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n  }, []);\n  return (// <Card\n    //     actions={[\n    //         <div key=\"twit\">\n    //             짹짹\n    //             <br />\n    //             {dummy.Post.length}\n    //         </div>,\n    //         <div key=\"following\">\n    //             팔로잉\n    //             <br />\n    //             {dummy.Followings.length}\n    //         </div>,\n    //         <div key=\"follower\">\n    //             팔로워\n    //             <br />\n    //             {dummy.Followers.length}\n    //         </div>,\n    //     ]}\n    // >\n    //     <Card.Meta\n    //         avatar={<Avatar>{dummy.nickname[0]}</Avatar>}\n    //         title={dummy.nickname}\n    //     />\n    //     <Button onClick={onLogOut}>로그아웃</Button>\n    // </Card>\n    __jsx(Card, {\n      actions: [__jsx(\"div\", {\n        key: \"twit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }), dummy.Post.length), __jsx(\"div\", {\n        key: \"following\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }), dummy.Followings.length), __jsx(\"div\", {\n        key: \"follower\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }), dummy.Followers.length)],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, __jsx(Card.Meta, {\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, dummy.nickname[0]),\n      title: dummy.nickname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      onClick: onLogOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"))\n  );\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["C:/prepare/front/components/UserProfile.js"],"names":["Avatar","Card","Button","React","useCallback","LOG_OUT_REQUEST","useDispatch","useSelector","UserProfile","setIsLoggedIn","dispatch","me","logOutLoading","state","user","onLogOut","type","dummy","Post","length","Followings","Followers","nickname"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,MAArC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC,C,CACA;;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;AACI;AACJ;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACvC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAwBL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzC;AAGA,QAAMC,QAAQ,GAAGX,WAAW,CAAC,MAAM;AAC/B;AACA;AACAM,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAGH,GAN2B,EAMzB,EANyB,CAA5B;AAQA,SACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAC,IAAD;AACI,MAAA,OAAO,EAAE,CACL;AAAK,QAAA,GAAG,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGKY,KAAK,CAACC,IAAN,CAAWC,MAHhB,CADK,EAML;AAAK,QAAA,GAAG,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGKF,KAAK,CAACG,UAAN,CAAiBD,MAHtB,CANK,EAWL;AAAK,QAAA,GAAG,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGKF,KAAK,CAACI,SAAN,CAAgBF,MAHrB,CAXK,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBI,MAAC,IAAD,CAAM,IAAN;AACI,MAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASF,KAAK,CAACK,QAAN,CAAe,CAAf,CAAT,CADZ;AAEI,MAAA,KAAK,EAAEL,KAAK,CAACK,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,EAuBI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAEP,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAvBJ;AA1BJ;AAqDH,CAlED;;AAoEA,eAAeP,WAAf","sourcesContent":["import { Avatar, Card, Button } from \"antd\";\r\nimport React, { useCallback } from \"react\";\r\n// import { logoutAction } from \"../reducers/user\";\r\nimport { LOG_OUT_REQUEST } from '../reducers/user';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// const dummy = {\r\n    //     nickname: \"제로초\",\r\n//     Post: [],\r\n//     Followings: [],\r\n//     Followers: [],\r\n//     isLoggedIn: false,\r\n// };\r\n\r\nconst UserProfile = ({ setIsLoggedIn }) => {\r\n    const dispatch = useDispatch();\r\n    const { me, logOutLoading } = useSelector((state) => state.user);\r\n    \r\n\r\n    const onLogOut = useCallback(() => {\r\n        // setIsLoggedIn(false);\r\n        // dispatch(logoutAction());\r\n        dispatch({\r\n            type: LOG_OUT_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        // <Card\r\n        //     actions={[\r\n        //         <div key=\"twit\">\r\n        //             짹짹\r\n        //             <br />\r\n        //             {dummy.Post.length}\r\n        //         </div>,\r\n        //         <div key=\"following\">\r\n        //             팔로잉\r\n        //             <br />\r\n        //             {dummy.Followings.length}\r\n        //         </div>,\r\n        //         <div key=\"follower\">\r\n        //             팔로워\r\n        //             <br />\r\n        //             {dummy.Followers.length}\r\n        //         </div>,\r\n        //     ]}\r\n        // >\r\n        //     <Card.Meta\r\n        //         avatar={<Avatar>{dummy.nickname[0]}</Avatar>}\r\n        //         title={dummy.nickname}\r\n        //     />\r\n        //     <Button onClick={onLogOut}>로그아웃</Button>\r\n        // </Card>\r\n        <Card\r\n            actions={[\r\n                <div key=\"twit\">\r\n                    짹짹\r\n                    <br />\r\n                    {dummy.Post.length}\r\n                </div>,\r\n                <div key=\"following\">\r\n                    팔로잉\r\n                    <br />\r\n                    {dummy.Followings.length}\r\n                </div>,\r\n                <div key=\"follower\">\r\n                    팔로워\r\n                    <br />\r\n                    {dummy.Followers.length}\r\n                </div>,\r\n            ]}\r\n        >\r\n            <Card.Meta\r\n                avatar={<Avatar>{dummy.nickname[0]}</Avatar>}\r\n                title={dummy.nickname}\r\n            />\r\n            <Button onClick={onLogOut}>로그아웃</Button>\r\n        </Card>\r\n\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}