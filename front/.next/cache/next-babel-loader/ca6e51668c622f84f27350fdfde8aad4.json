{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  // console.log(\"data(saga) :::::: \", data);\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // console.log('saga logIn');\n    const result = yield call(\"/user/login\", action.data);\n    console.log(\"result(login response from backend) : \", result); // yield delay(1000);\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: _objectSpread({}, action.data)\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logOut(action) {\n  try {\n    console.log('saga logout'); // const result = yield call(logInAPI);\n\n    yield delay(2000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  console.log(\"saga signUpAPI 실행 확인 data :\", data);\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  console.log(\"signup 실행 check\");\n\n  try {\n    // yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(\"result : \", result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchLogIn() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchFollow), fork(watchUnfollow), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/react-nodebird/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","axios","logInAPI","data","post","logIn","action","result","console","log","type","err","error","response","logOutAPI","logOut","followAPI","follow","unfollowAPI","unfollow","signUpAPI","signUp","watchLogOut","watchLogIn","watchFollow","watchUnfollow","watchSignUp","userSaga"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,eANJ,EAOIC,cAPJ,EAQIC,cARJ,EASIC,cATJ,EAUIC,gBAVJ,EAWIC,gBAXJ,EAYIC,gBAZJ,EAaIC,eAbJ,EAcIC,eAdJ,EAeIC,eAfJ,QAiBO,kBAjBP;AAkBA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB;AACA,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA;AACA,UAAMC,MAAM,GAAG,MAAM1B,IAAI,CAAC,aAAD,EAAiByB,MAAM,CAACH,IAAxB,CAAzB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDF,MAAtD,EAHA,CAIA;;AAEA,UAAMvB,GAAG,CAAC;AACN0B,MAAAA,IAAI,EAAEvB,cADA;AAENgB,MAAAA,IAAI,oBAAOG,MAAM,CAACH,IAAd;AAFE,KAAD,CAAT;AAIH,GAVD,CAUE,OAAOQ,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAM3B,GAAG,CAAC;AACN0B,MAAAA,IAAI,EAAEtB,cADA;AAENwB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFd,KAAD,CAAT;AAIH;AACJ;;AAGD,SAASW,SAAT,CAAmBX,IAAnB,EAAyB;AACrB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAED,UAAUY,MAAV,CAAiBT,MAAjB,EAAyB;AACrB,MAAI;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADA,CAEA;;AACA,UAAM3B,KAAK,CAAC,IAAD,CAAX;AAEA,UAAME,GAAG,CAAC;AACN0B,MAAAA,IAAI,EAAEpB;AADA,KAAD,CAAT;AAGH,GARD,CAQE,OAAOqB,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAM3B,GAAG,CAAC;AACN0B,MAAAA,IAAI,EAAEnB,eADA;AAENqB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASa,SAAT,GAAqB;AACjB,SAAOf,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACH;;AAED,UAAUa,MAAV,CAAiBX,MAAjB,EAAyB;AACrB,MAAI;AACA;AACA,UAAMxB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACN0B,MAAAA,IAAI,EAAEhB,cADA;AAENS,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOQ,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAM3B,GAAG,CAAC;AACN0B,MAAAA,IAAI,EAAElB,cADA;AAENoB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASe,WAAT,GAAuB;AACnB,SAAOjB,KAAK,CAACG,IAAN,CAAW,eAAX,CAAP;AACH;;AAED,UAAUe,QAAV,CAAmBb,MAAnB,EAA2B;AACvB,MAAI;AACA;AACA,UAAMxB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACN0B,MAAAA,IAAI,EAAEb,gBADA;AAENM,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOQ,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAM3B,GAAG,CAAC;AACN0B,MAAAA,IAAI,EAAEf,gBADA;AAENiB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASiB,SAAT,CAAmBjB,IAAnB,EAAyB;AACrBK,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CN,IAA3C;AACA,SAAOF,KAAK,CAACG,IAAN,CAAW,OAAX,EAAoBD,IAApB,CAAP;AACH;;AAED,UAAUkB,MAAV,CAAiBf,MAAjB,EAAyB;AACrBE,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,MAAI;AACA;AACA,UAAMF,MAAM,GAAG,MAAM1B,IAAI,CAACuC,SAAD,EAAYd,MAAM,CAACH,IAAnB,CAAzB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAA0BF,MAA1B;AAEA,UAAMvB,GAAG,CAAC;AACN0B,MAAAA,IAAI,EAAEX;AADA,KAAD,CAAT;AAGH,GARD,CAQE,OAAOY,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAM3B,GAAG,CAAC;AACN0B,MAAAA,IAAI,EAAEV,eADA;AAENY,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUmB,WAAV,GAAwB;AACpBd,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,QAAMxB,UAAU,CAACI,eAAD,EAAkB0B,MAAlB,CAAhB;AACH;;AAED,UAAUQ,UAAV,GAAuB;AACnBf,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,QAAMxB,UAAU,CAACC,cAAD,EAAiBmB,KAAjB,CAAhB;AACH;;AAED,UAAUmB,WAAV,GAAwB;AACpB,QAAMvC,UAAU,CAACQ,cAAD,EAAiBwB,MAAjB,CAAhB;AACH;;AAED,UAAUQ,aAAV,GAA0B;AACtB,QAAMxC,UAAU,CAACW,gBAAD,EAAmBuB,QAAnB,CAAhB;AACH;;AAED,UAAUO,WAAV,GAAwB;AACpB,QAAMzC,UAAU,CAACa,eAAD,EAAkBuB,MAAlB,CAAhB;AACH;;AAED,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAM/C,GAAG,CAAC,CACNG,IAAI,CAACwC,UAAD,CADE,EAENxC,IAAI,CAACuC,WAAD,CAFE,EAGNvC,IAAI,CAACyC,WAAD,CAHE,EAINzC,IAAI,CAAC0C,aAAD,CAJE,EAKN1C,IAAI,CAAC2C,WAAD,CALE,CAAD,CAAT;AAQH","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n\r\n} from '../reducers/user';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction logInAPI(data) {\r\n    // console.log(\"data(saga) :::::: \", data);\r\n    return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // console.log('saga logIn');\r\n        const result = yield call(\"/user/login\" , action.data);\r\n        console.log(\"result(login response from backend) : \", result);\r\n        // yield delay(1000);\r\n\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: { ...action.data },\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logOutAPI(data) {\r\n    return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n    try {\r\n        console.log('saga logout');\r\n        // const result = yield call(logInAPI);\r\n        yield delay(2000);\r\n\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI() {\r\n    return axios.post('/api/follow');\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        // const result = yield call(followAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n    return axios.post('/api/unfollow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        // const result = yield call(unfollowAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    console.log(\"saga signUpAPI 실행 확인 data :\", data);\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    console.log(\"signup 실행 check\");\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(\"result : \" , result);\r\n\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchSignUp),\r\n\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}