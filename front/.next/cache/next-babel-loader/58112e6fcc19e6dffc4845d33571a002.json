{"ast":null,"code":"var _jsxFileName = \"C:\\\\prepare\\\\front\\\\components\\\\FollowButton.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux'; // 글을 쓴 사람이 팔로우한 사람인지를 따져서 팔로우 언팔로우로 분기 처리\n\nconst FollowButton = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n  return __jsx(Button, {\n    onClick: onClickButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, isFollowing ? '언팔로우' : '팔로우');\n};\n\nexport default FollowButton;","map":{"version":3,"sources":["C:/prepare/front/components/FollowButton.js"],"names":["React","useCallback","Button","useSelector","useDispatch","FollowButton","post","me","state","user","isFollowing","Followings","find","v","id","User","onClickButton","dispatch","type","UNFOLLOW_REQUEST","data","FOLLOW_REQUEST"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,WAAjB,QAAmC,OAAnC;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAASJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAMC,WAAW,GAAGH,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEI,UAAJ,CAAeC,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASR,IAAI,CAACS,IAAL,CAAUD,EAA9C,CAApB;AAEA,QAAME,aAAa,GAAGf,WAAW,CAAC,MAAM;AACpC,QAAIS,WAAJ,EAAiB;AACbO,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEC,gBADD;AAELC,QAAAA,IAAI,EAAEd,IAAI,CAACS,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH,KALD,MAKO;AACHG,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEG,cADD;AAELD,QAAAA,IAAI,EAAEd,IAAI,CAACS,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH;AACJ,GAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;AAcA,SACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,WAAW,GAAG,MAAH,GAAY,KAD5B,CADJ;AAMH,CAxBD;;AA0BA,eAAeL,YAAf","sourcesContent":["import React , { useCallback }from 'react';\r\nimport {Button} from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// 글을 쓴 사람이 팔로우한 사람인지를 따져서 팔로우 언팔로우로 분기 처리\r\n\r\nconst FollowButton = ({post}) => {\r\n    const { me } = useSelector((state) => state.user);\r\n    const isFollowing = me?.Followings.find((v) => v.id === post.User.id);\r\n\r\n    const onClickButton = useCallback(() => {\r\n        if (isFollowing) {\r\n            dispatch({\r\n                type: UNFOLLOW_REQUEST,\r\n                data: post.User.id,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FOLLOW_REQUEST,\r\n                data: post.User.id,\r\n            });\r\n        }\r\n    }, [isFollowing]);\r\n\r\n    return(\r\n        <Button onClick={onClickButton }>\r\n            {isFollowing ? '언팔로우' : '팔로우'}\r\n        </Button>\r\n    )\r\n\r\n}\r\n\r\nexport default FollowButton;"]},"metadata":{},"sourceType":"module"}