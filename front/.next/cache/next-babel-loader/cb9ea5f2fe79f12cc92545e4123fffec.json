{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\"; //\n\nimport createSagaMiddleware from 'redux-saga';\n; //\n\nimport rootSaga from '../sagas';\n\nvar configureStore = function configureStore() {\n  //\n  var sagaMiddleware = createSagaMiddleware(); //\n\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); //\n\n  var store = createStore(reducer, enhancer); //\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/prepare/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","reducer","createSagaMiddleware","rootSaga","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAA8C,C,CAC9C;;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB;AACA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,CAFyB,CAGzB;;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;AAEA,MAAME,QAAQ,GACV,QACMR,OAAO,CAACD,eAAe,MAAf,SAAmBQ,WAAnB,CAAD,CADb,GAEMN,mBAAmB,CAACF,eAAe,MAAf,SAAmBQ,WAAnB,CAAD,CAH7B,CANyB,CAWzB;;AACA,MAAME,KAAK,GAAGX,WAAW,CAACI,OAAD,EAAUM,QAAV,CAAzB,CAZyB,CAazB;;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBP,QAAnB,CAAjB;AAEA,SAAOK,KAAP;AACH,CAjBD;;AAkBA,IAAMG,OAAO,GAAGf,aAAa,CAACQ,cAAD,EAAiB;AAC1CQ,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from \"../reducers\";\r\n//\r\nimport createSagaMiddleware from 'redux-saga';;\r\n//\r\nimport rootSaga from '../sagas';\r\n\r\nconst configureStore = () => {\r\n    //\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    //\r\n    const middlewares = [sagaMiddleware];\r\n\r\n    const enhancer =\r\n        process.env.NODE_ENV === \"production\"\r\n            ? compose(applyMiddleware(...middlewares))\r\n            : composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\n    //\r\n    const store = createStore(reducer, enhancer);\r\n    //\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n\r\n    return store;\r\n};\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}