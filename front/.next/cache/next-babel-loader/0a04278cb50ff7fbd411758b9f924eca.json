{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork, call, put } from \"redux=-saga/effects\";\n\nfunction login() {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(loginAPI);\n\n        case 2:\n          result = _context.sent;\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return take(\"LOG_IN_REQUEST\", login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchLogin)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/prepare/front/sagas/index.js"],"names":["login","watchLogin","rootSaga","all","fork","call","put","loginAPI","result","take"],"mappings":";;oDAIUA,K;qDAIAC,U;qDAIeC,Q;;AAZzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,qBAArC;;AAIA,SAAUN,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACmB,iBAAMK,IAAI,CAACE,QAAD,CAAV;;AADnB;AACUC,UAAAA,MADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUP,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMQ,IAAI,CAAC,gBAAD,EAAmBT,KAAnB,CAAV;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACH,UAAD,CADE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, call, put } from \"redux=-saga/effects\";\r\n\r\n\r\n\r\nfunction* login() {\r\n    const result = yield call(loginAPI);\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield take(\"LOG_IN_REQUEST\", login);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}