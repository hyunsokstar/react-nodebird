{"ast":null,"code":"var _jsxFileName = \"C:\\\\prepare\\\\front\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux';\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useEffect } from 'react';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const {\n    me\n  } = useSelector(state => state.user); // useEffect(()=> {\n  //     function onScroll(){\n  //         console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n  //         if(window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\n  //             console.log(\"화면이 바닥에 도달했습니다.\");\n  //         }\n  //     }\n  //     window.addEventListener('scroll', onScroll);\n  //     return() => {\n  //         window.removeEventListener('scroll', onScroll);\n  //     }\n  // },[]);\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            data: mainPosts[mainPosts.length - 1].id\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePost, loadPostsLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }\n  }), mainPosts.map(c => {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    });\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/prepare/front/pages/index.js"],"names":["useSelector","AppLayout","PostForm","PostCard","useEffect","LOAD_POSTS_REQUEST","Home","mainPosts","state","post","me","user","dispatch","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","hasMorePost","loadPostsLoading","data","length","id","addEventListener","removeEventListener","map","c"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAgBP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAA1B,CAFe,CAIf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAD,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASU,QAAT,GAAoB;AAChB,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACtG,YAAIC,WAAW,IAAI,CAACC,gBAApB,EAAsC;AAClCV,UAAAA,QAAQ,CAAC;AACLC,YAAAA,IAAI,EAAER,kBADD;AAELkB,YAAAA,IAAI,EAAEhB,SAAS,CAACA,SAAS,CAACiB,MAAV,GAAmB,CAApB,CAAT,CAAgCC;AAFjC,WAAD,CAAR;AAIH;AACJ;AACJ;;AACDV,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACH,KAFD;AAGH,GAfQ,EAeN,CAACP,SAAD,EAAYc,WAAZ,EAAyBC,gBAAzB,CAfM,CAAT;AAiBA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEKH,SAAS,CAACqB,GAAV,CAAeC,CAAD,IAAO;AAClB,WACI,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACJ,EAAjB;AAAqB,MAAA,IAAI,EAAEI,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJA,CAFL,CADJ;AAUH,CAlDD;;AAoDA,eAAevB,IAAf","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { useEffect } from 'react';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst Home = () => {\r\n    const { mainPosts } = useSelector(state => state.post);\r\n    const { me } = useSelector((state) => state.user);\r\n\r\n    // useEffect(()=> {\r\n    //     function onScroll(){\r\n    //         console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n    //         if(window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\r\n    //             console.log(\"화면이 바닥에 도달했습니다.\");\r\n    //         }\r\n    //     }\r\n    //     window.addEventListener('scroll', onScroll);\r\n    //     return() => {\r\n    //         window.removeEventListener('scroll', onScroll);\r\n    //     }\r\n    // },[]);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePost && !loadPostsLoading) {\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                        data: mainPosts[mainPosts.length - 1].id,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [mainPosts, hasMorePost, loadPostsLoading]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((c) => {\r\n                return (\r\n                    <PostCard key={c.id} post={c} />\r\n                );\r\n            })}\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n"]},"metadata":{},"sourceType":"module"}