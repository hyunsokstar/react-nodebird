{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react-nodebird\\\\front\\\\components\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setCommentText = _useInput2[2];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone,\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n    console.log(\"me.id : \", id); // 내가 \n\n    console.log(\"submit post.id : \", post.id); // 어떤글에 대해 \n\n    console.log(\"submit commnetText  : \", commentText); // 어떤 글을 \n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      marginTop: \"2px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"GSNMaMYkNHOwdkkOXVjhCdAkMQE=\", false, function () {\n  return [useDispatch, useSelector, useInput, useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/react-nodebird/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","Button","Form","Input","useInput","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","commentText","onChangeCommentText","setCommentText","addCommentDone","addCommentLoading","onSubmitComment","type","data","content","userId","postId","console","log","position","marginTop","right","bottom","propTypes"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n    const { addCommentDone, addCommentLoading } = useSelector((state) => state.post);\r\n\r\n    useEffect(() => {\r\n        if (addCommentDone) {\r\n            setCommentText('');\r\n        }\r\n    }, [addCommentDone]);\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, userId: id, postId: post.id },\r\n        });\r\n        console.log(\"me.id : \", id);  // 내가 \r\n        console.log(\"submit post.id : \", post.id); // 어떤글에 대해 \r\n        console.log(\"submit commnetText  : \", commentText); // 어떤 글을 \r\n\r\n    }, [commentText, id]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{ position: 'relative', marginTop: \"2px\" }}>\r\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n                <Button\r\n                    style={{ position: 'absolute', right: 0, bottom: -40 }}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    loading={addCommentLoading}\r\n                >\r\n                    삐약\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}