{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from '../reducers/user';\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  console.log(\"login data(saga) : \", data);\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // console.log('saga logIn');\n    // yield delay(1000);\n    const result = yield call(logInAPI, action.data);\n    console.log(\"login response from backend : \", result);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: _objectSpread({}, action.data),\n      data: result.data // data: { ...action.data },\n\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut(action) {\n  try {\n    const result = yield call(logOutAPI);\n    console.log(\"logout result: \", result); // yield delay(2000);\n\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  console.log(\"saga signUpAPI 실행 확인 data :\", data);\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  console.log(\"signup 실행 check\");\n\n  try {\n    // yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(\"result : \", result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchLogIn() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchFollow), fork(watchUnfollow), fork(watchSignUp), fork(watchLoadUser), fork(watchChangeNickname)]);\n}","map":{"version":3,"sources":["C:/react-nodebird/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","axios","logInAPI","data","console","log","post","logIn","action","result","type","err","error","response","logOutAPI","logOut","followAPI","follow","unfollowAPI","unfollow","signUpAPI","signUp","loadUserAPI","get","loadUser","changeNicknameAPI","patch","nickname","changeNickname","watchLogOut","watchLogIn","watchFollow","watchUnfollow","watchSignUp","watchLoadUser","watchChangeNickname","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAILURE,\r\n\r\n    CHANGE_NICKNAME_REQUEST,\r\n    CHANGE_NICKNAME_SUCCESS,\r\n    CHANGE_NICKNAME_FAILURE,\r\n\r\n} from '../reducers/user';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction logInAPI(data) {\r\n    console.log(\"login data(saga) : \", data);\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // console.log('saga logIn');\r\n        // yield delay(1000);\r\n        const result = yield call(logInAPI , action.data);\r\n        console.log(\"login response from backend : \", result);\r\n\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: { ...action.data },\r\n            data: result.data\r\n            // data: { ...action.data },\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logOutAPI(data) {\r\n    return axios.post('/user/logout', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n    try {\r\n        const result = yield call(logOutAPI);\r\n        console.log(\"logout result: \", result);\r\n        // yield delay(2000);\r\n\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI() {\r\n    return axios.post('/api/follow');\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        // const result = yield call(followAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n    return axios.post('/api/unfollow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        // const result = yield call(unfollowAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    console.log(\"saga signUpAPI 실행 확인 data :\", data);\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    console.log(\"signup 실행 check\");\r\n    try {\r\n        // yield delay(1000);\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(\"result : \" , result);\r\n\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadUserAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadUser(action) {\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname', { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n    try {\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchSignUp),\r\n        fork(watchLoadUser),\r\n        fork(watchChangeNickname),\r\n\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}