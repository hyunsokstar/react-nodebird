{"ast":null,"code":"var _jsxFileName = \"C:\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Card, Avatar, List } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport CommentForm from './CommentForm';\nconst {\n  Meta\n} = Card;\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []); // console.log(\"post : \", post);\n\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      width: \"100%\"\n    },\n    cover: post.Images[0] && __jsx(\"img\", {\n      alt: \"example\",\n      src: post.Images[0].src,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }), // <MessageOutlined key=\"message\" onClick=\"\" />,\n    __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }), __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, __jsx(Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(CommentForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), __jsx(List, {\n    header: `${post.Comments ? post.Comments.length : 0} 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments || [],\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 45\n        }\n      }, __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 48\n        }\n      }, item.User.nickname[0])),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["C:/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Avatar","List","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","CommentForm","Meta","PostCard","post","commentFormOpened","setCommentFormOpened","onToggleComment","prev","width","Images","src","User","nickname","content","Comments","length","item"],"mappings":"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","sourcesContent":["import React, { useState, useCallback} from \"react\";\r\nimport { Card, Avatar, List } from 'antd';\r\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined} from '@ant-design/icons';\r\nimport CommentForm from './CommentForm';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst PostCard = ({ post }) => {\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, []);\r\n\r\n    // console.log(\"post : \", post);\r\n    \r\n    return (\r\n        <>\r\n            <Card\r\n                style={{ width: \"100%\" }}\r\n                cover={post.Images[0] && <img alt=\"example\" src={post.Images[0].src} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    <HeartOutlined key=\"heart\" onClick=\"\" />,\r\n                    // <MessageOutlined key=\"message\" onClick=\"\" />,\r\n                    <MessageOutlined key=\"message\" onClick={onToggleComment} />,\r\n                    <EllipsisOutlined />\r\n                ]}\r\n            >\r\n                <Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    description={post.content}\r\n                />\r\n            </Card>\r\n\r\n            {commentFormOpened && (\r\n                <>\r\n                    <CommentForm />\r\n                    <List\r\n                        header={`${post.Comments ? post.Comments.length : 0} 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments || []}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={(\r\n                                            <a><Avatar>{item.User.nickname[0]}</Avatar></a>\r\n                                    )}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </>\r\n            )}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default PostCard;\r\n\r\n"]},"metadata":{},"sourceType":"module"}