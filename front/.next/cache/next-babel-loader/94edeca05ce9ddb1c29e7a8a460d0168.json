{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  me: null,\n  signUpData: {},\n  loginData: {},\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: '제로초',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '부기초'\n  }, {\n    nickname: 'Chanho Lee'\n  }, {\n    nickname: 'neue zeal'\n  }],\n  Followers: [{\n    nickname: '부기초'\n  }, {\n    nickname: 'Chanho Lee'\n  }, {\n    nickname: 'neue zeal'\n  }]\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOG_IN_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true\n      });\n\n    case \"LOG_IN_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case \"LOG_IN_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: false\n      });\n\n    case \"LOG_OUT_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true\n      });\n\n    case \"LOG_OUT_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logInDone: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case \"LOG_OUT_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: false\n      });\n\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: [{\n            id: action.data\n          }, ...state.me.Posts]\n        })\n      });\n\n    case REMOVE_POST_OF_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: state.me.Posts.filter(v => v.id !== action.data)\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/prepare/front/reducers/user.js"],"names":["initialState","me","signUpData","loginData","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","reducer","state","action","type","filter","v"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data,\r\n    nickname: '제로초',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n    Followers: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n});\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case \"LOG_IN_REQUEST\":\r\n            return {\r\n                ...state,\r\n                logInLoading: true,\r\n            };\r\n        case \"LOG_IN_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                logInLoading: false,\r\n                logInDone: true,\r\n                me: dummyUser(action.data)\r\n            };\r\n        case \"LOG_IN_FAILURE\":\r\n            return {\r\n                ...state,\r\n                logInLoading: false,\r\n                logInDone: false,\r\n            };\r\n        case \"LOG_OUT_REQUEST\":\r\n            return {\r\n                ...state,\r\n                logOutLoading: true,\r\n            };\r\n        case \"LOG_OUT_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                logOutLoading: false,\r\n                logInDone: false,\r\n                logOutDone: true,\r\n                me: null,\r\n            };\r\n        case \"LOG_OUT_FAILURE\":\r\n            return {\r\n                ...state,\r\n                logOutLoading: false,\r\n                logOutDone: false,\r\n            };\r\n\r\n        case ADD_POST_TO_ME:\r\n            return {\r\n                ...state,\r\n                me: {\r\n                    ...state.me,\r\n                    Posts: [{ id: action.data }, ...state.me.Posts],\r\n                },\r\n            };\r\n        case REMOVE_POST_OF_ME:\r\n            return {\r\n                ...state,\r\n                me: {\r\n                    ...state.me,\r\n                    Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}