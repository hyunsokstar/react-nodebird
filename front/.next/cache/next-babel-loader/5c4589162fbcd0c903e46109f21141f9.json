{"ast":null,"code":"var _jsxFileName = \"C:\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { useSelector } from 'react-redux';\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {\n    console.log(\"id : \", id); // 내가 \n\n    console.log(\"submit post.id : \", post.id); // 어떤글에 대해\n\n    console.log(\"submit commnetText  : \", commentText); // 어떤 글을\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      marginTop: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {};\nexport default CommentForm;","map":{"version":3,"sources":["C:/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","Button","Form","Input","useInput","useSelector","CommentForm","post","dispatch","useDispatch","id","state","user","me","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","position","marginTop","right","bottom","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAMC,EAAE,GAAGL,WAAW,CAAEM,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM,CAACI,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDZ,QAAQ,CAAC,EAAD,CAAnE;AACA,QAAMa,eAAe,GAAGlB,WAAW,CAAC,MAAM;AACtCmB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,EAArB,EADsC,CACX;;AAC3BQ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCZ,IAAI,CAACG,EAAtC,EAFsC,CAEK;;AAC3CQ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCL,WAAtC,EAHsC,CAGc;AACvD,GAJkC,EAIhC,CAACA,WAAD,EAAcJ,EAAd,CAJgC,CAAnC;AAMA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEO,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,SAAS,EAAE;AAAnC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,IAAI,EAAE,CAAtB;AAAyB,IAAA,KAAK,EAAEP,WAAhC;AAA6C,IAAA,QAAQ,EAAEC,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AACI,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC;AAA3C,KADX;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,QAAQ,EAAC,QAHb;AAII,IAAA,OAAO,EAAC,EAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAeH,CAzBD;;AA2BAjB,WAAW,CAACkB,SAAZ,GAAwB,EAAxB;AAGA,eAAelB,WAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport useInput from '../hooks/useInput';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(\"id : \", id);  // 내가 \r\n        console.log(\"submit post.id : \", post.id); // 어떤글에 대해\r\n        console.log(\"submit commnetText  : \", commentText); // 어떤 글을\r\n    }, [commentText, id]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{ position: 'relative', marginTop: \"2px\" }}>\r\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n                <Button\r\n                    style={{ position: 'absolute', right: 0, bottom: -40 }}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    loading=\"\"\r\n                >\r\n                    삐약\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}